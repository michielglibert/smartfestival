version: "3"
services:
# ------------Support services-------------
  zookeeper:
    image: confluentinc/cp-zookeeper
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
    ports:
      - 2181:2181
  kafka-server:
    image: confluentinc/cp-kafka
    depends_on: 
      - zookeeper
    environment: 
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka-server:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    ports:
      - 9092:9092
  notification-mongodb:
    image: mongo
    ports:
      - 27112:27017
  security-mongodb:
    image: mongo
    ports:
      - 27113:27017
  product-mongodb:
    image: mongo
    ports:
      - 27114:27017
  balance-postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: root
      POSTGRES_DB: balance
    ports:
      - 27115:5432
  display-postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: root
      POSTGRES_DB: display
    ports:
      - 27116:5432
  lineup-postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: root
      POSTGRES_DB: lineup
    ports:
      - 27117:5432
  ticket-postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: root
      POSTGRES_DB: ticket
    ports:
      - 27118:5432
  visitor-postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: root
      POSTGRES_DB: visitor
    ports:
      - 27119:5432
# -------------Main services---------------
  notification:
    image: 'lemigom/notification'
    build: ./NotificationService
    volumes: 
      - ./NotificationService/target:/app
    links:
      - kafka-server
      - zookeeper
    depends_on:
      - kafka-server
      - zookeeper
    ports:
      - 2223:2223
  security:
    image: 'lemigom/security'
    build: ./SecurityService
    volumes: 
      - ./SecurityService/target:/app
    links:
      - kafka-server
      - zookeeper
    depends_on:
      - kafka-server
      - zookeeper
    ports:
      - 2224:2224
  balance:
    image: 'lemigom/balance'
    build: ./BalanceService
    volumes: 
      - ./BalanceService/target:/app
    links:
      - kafka-server
      - zookeeper
    depends_on:
      - kafka-server
      - zookeeper
    ports:
      - 2228:2228
  product:
    image: 'lemigom/product'
    build: ./ProductService
    volumes: 
      - ./ProductService/target:/app
    links:
      - kafka-server
      - zookeeper
    depends_on:
      - kafka-server
      - zookeeper
    ports:
      - 2227:2227
  lineup:
    image: 'lemigom/lineup'
    build: ./LineupService
    volumes: 
      - ./LineupService/target:/app
    links:
      - kafka-server
      - zookeeper
    depends_on:
      - kafka-server
      - zookeeper
    ports:
      - 2229:2229
  display:
    image: 'lemigom/display'
    build: ./DisplayService
    volumes: 
      - ./DisplayService/target:/app
    links:
      - kafka-server
      - zookeeper
    depends_on:
      - kafka-server
      - zookeeper
    ports:
      - 2230:2230
  ticket:
    image: 'lemigom/ticket'
    build: ./TicketService
    volumes: 
      - ./TicketService/target:/app
    links:
      - kafka-server
      - zookeeper
    depends_on:
      - kafka-server
      - zookeeper
    ports:
      - 2225:2225
  visitor:
    image: 'lemigom/visitor'
    build: ./VisitorService
    volumes: 
      - ./VisitorService/target:/app
    links:
      - kafka-server
      - zookeeper
    depends_on:
      - kafka-server
      - zookeeper
    ports:
      - 2226:2226
  payment:
    image: 'lemigom/payment'
    build: ./PaymentAdapterService
    volumes: 
      - ./PaymentAdapterService/target:/app
    links:
      - kafka-server
      - zookeeper
    depends_on:
      - kafka-server
      - zookeeper
    ports:
      - 2232:2232
  apigateway:
    image: 'lemigom/apigateway'
    build: ./ApiGateway
    volumes:
      - ./ApiGateway/target:/app
    links:
      - notification
      - security
    ports:
      - 8080:8080

# -------------WEB UI---------------
  frontend:
    image: 'lemigom/frontend'
    build: ./frontend
    volumes: 
      - ./frontend/build:/app
    depends_on:
      - apigateway
    ports:
      - 80:80

